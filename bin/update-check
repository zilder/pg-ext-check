#!/usr/bin/env bash

psql_cmd='psql postgres -U postgres -t -q'

control_file=`ls *.control`

# get the main branch name
#
# XXX here is a little trick that allows to test both local copy of repo (which
# usually already contains all branches) as well as repo in Github Actions
# (which usually only contains the branch being tested).
if ! git symbolic-ref refs/remotes/origin/HEAD --quiet > /dev/null; then
    main_branch=`git remote show origin | awk '/HEAD branch/ {print $NF}'`

    # fetch main branch in order to get access to its control file
    git fetch origin master --quiet
else
    main_branch=`git symbolic-ref refs/remotes/origin/HEAD | sed 's/^refs\/remotes\/origin\///'`
fi

# get extension version number from main and current branches
main_version=`git show origin/$main_branch:$control_file | \
              grep ^\s\*default_version | \
              sed "s/.*'\(.*\)'.*/\1/g"`
current_version=`cat $control_file | \
                 grep ^\s\*default_version | \
                 sed "s/.*'\(.*\)'.*/\1/g"`

echo "Current version: ${current_version}"
echo "Main branch version: ${main_version}"

if [[ $main_version == $current_version ]]; then
    echo 'Versions are identical, skipping update check...'
    exit 0
fi

ext_name=`echo ${control_file} | cut -d "." -f 1`

# list extension objects installed from the latest base script
$psql_cmd -c "CREATE EXTENSION ${ext_name} VERSION '${current_version}'" \
          -c "\dx+ ${ext_name}" \
          -c "DROP EXTENSION ${ext_name}" \
          -o base.out

# list extension objects after update from older version
$psql_cmd -c "CREATE EXTENSION ${ext_name} VERSION '${main_version}'" \
          -c "ALTER EXTENSION ${ext_name} UPDATE TO '${current_version}'" \
          -c "\dx+ ${ext_name}" \
          -c "DROP EXTENSION ${ext_name}" \
          -o updated.out

# compare the above lists
status=0
diff base.out updated.out > ext_desc.diff || status=$?

# in case of discrepancy print the diff
if [[ ${status} -ne 0 ]]; then
    echo "Update check failed."
    cat ext_desc.diff
else
    echo "Update check passed."
fi

exit ${status}
